# SPDX-FileCopyrightText: 2021-2025 CERN and the Allpix Squared authors
# SPDX-License-Identifier: MIT

name: compile&test
on:
  pull_request:
    types: [opened, reopened, edited, ready_for_review, synchronize]
env:
  LCG_VERSION: LCG_108
jobs:
  compile-alma9:
    strategy:
      matrix:
        compiler: [gcc15, clang19]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: cvmfs-contrib/github-action-cvmfs@v4
    - uses: aidasoft/run-lcg-view@v4
      with:
        run_local_checkout: 'false'
        release-platform: "${{env.LCG_VERSION}}/x86_64-el9-${{matrix.compiler}}-opt"
        run: |
          mkdir build
          cd build
          cmake -GNinja -DCMAKE_CXX_FLAGS="-Werror" -DBUILD_LCIOWriter=ON -DCMAKE_BUILD_TYPE=RELEASE -DROOT_DIR=$ROOTSYS -DEigen3_DIR=$Eigen3_DIR -DLCIO_DIR=$LCIO_DIR ..
          ninja -k0
          ninja install
    - uses: actions/upload-artifact@v4
      with:
        name: allpix-artifacts-el9-${{matrix.compiler}}
        path: |
          build/
          bin/
          lib/

  test-alma9:
    needs: compile-alma9
    runs-on: ubuntu-latest
    strategy:
      matrix:
        whichtest: [test_core, test_modules, examples]
        compiler: [gcc15, clang19]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: cvmfs-contrib/github-action-cvmfs@v4
    - uses: actions/download-artifact@v4
      with:
        name: allpix-artifacts-el9-${{matrix.compiler}}
    - uses: aidasoft/run-lcg-view@v4
      with:
        run_local_checkout: 'false'
        release-platform: "${{env.LCG_VERSION}}/x86_64-el9-${{matrix.compiler}}-opt"
        run: |
          chmod a+x bin/allpix
          cd build
          ctest -R ${{matrix.whichtest}} --output-on-failure -j4
